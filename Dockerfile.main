ARG NODE_VERSION=21.5.0
ARG ALPINE_VERSION=3.18

#############################################################
# Stage 1 - App extraction / pruning                        #
#############################################################

FROM node:${NODE_VERSION}-alpine${ALPINE_VERSION} AS app-builder

RUN apk update && apk add build-base git \
    && apk add --no-cache g++ openssl cairo-dev jpeg-dev pango-dev giflib-dev \
    && apk add libmount

WORKDIR /app

COPY --link package.json ./

# We can't run turbo without yarn install first, let's install locally and make sure
# both local and docker are aligned on the package.json version.
COPY --link . .

#############################################################
# Stage 2 - App installation                                #
#############################################################

FROM app-builder AS app-installer


WORKDIR /app

# First install the dependencies (as they change less often)
COPY --link .gitignore tsconfig.json package.json ./

RUN npm install pnpm@8.15.7 -g
RUN pnpm install

# Alternatively we can use a build cache (buildx)
#RUN --mount=type=cache,target=/root/.yarn3-cache,id=yarn3-cache \

# RUN npm run migrations-generate-mall-web
RUN npm run build
RUN npm run prisma

#############################################################
# Stage 3 - App runner                                      #
#############################################################
FROM node:${NODE_VERSION}-alpine${ALPINE_VERSION} AS app-runner

RUN apk add --no-cache tzdata bash && corepack enable

WORKDIR /app

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Set the correct permission for prerender cache
RUN mkdir .next
RUN chown nextjs:nodejs .next
RUN mkdir logs
RUN chown nextjs:nodejs logs

USER nextjs

COPY --from=app-installer --chown=nextjs:nodejs /app/next.config.ts \
                    /app/package.json \
                    ./

# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=app-installer --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=app-installer --chown=nextjs:nodejs /app/.next/static ./.next/static
COPY --from=app-installer --chown=nextjs:nodejs /app/public ./public


EXPOSE 4003

ENV PORT=4003

# server.js is created by next build from the standalone output
# https://nextjs.org/docs/pages/api-reference/next-config-js/output
CMD HOSTNAME="0.0.0.0" node server.js